import type {Metadata} from "next";
import {Geist, Geist_Mono} from "next/font/google";
import {NextIntlClientProvider} from 'next-intl';
import {getMessages} from 'next-intl/server';
import {notFound} from 'next/navigation';
import {routing} from '@/i18n/routing';
import "../globals.css";
import {ReduxProvider} from "@/store/redux-provider";
import {AntdRegistry} from "@ant-design/nextjs-registry";

const geistSans = Geist({
    variable: "--font-geist-sans",
    subsets: ["latin"],
});

const geistMono = Geist_Mono({
    variable: "--font-geist-mono",
    subsets: ["latin"],
});

export const metadata: Metadata = {
    title: "Create Next App",
    description: "Generated by create next app",
};

async function RootLayout({
                              children,
                              params: {locale}

                          }: Readonly<{
    children: React.ReactNode;
    params: { locale: string };

}>) {
    // Ensure that the incoming `locale` is valid
    if (!routing.locales.includes(locale as any)) {
        notFound();
    }

    // Providing all messages to the client
    // side is the easiest way to get started
    const messages = await getMessages();

    return (
        <html lang="uz">
        <body className={`${geistSans.variable} ${geistMono.variable}`}>
        <NextIntlClientProvider messages={messages}>
            <ReduxProvider>
                <AntdRegistry>
                    {children}
                </AntdRegistry>
            </ReduxProvider>
        </NextIntlClientProvider>
        </body>
        </html>
    );
}

export default RootLayout;
